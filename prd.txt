# 프로젝트 요구사항 문서 (PRD)
## Todo-Master: AI 기반 개인 목표 관리 애플리케이션

### 📋 문서 정보
- **버전**: 1.0
- **작성일**: 2025년 1월
- **대상**: 개인 사용자
- **프로젝트 유형**: 모바일 애플리케이션 (iOS/Android)

---

## 1. 제품 개요

### 1.1 비전
사용자가 막연한 목표를 구체적이고 실행 가능한 계획으로 변환하여, 체계적으로 목표를 달성할 수 있도록 돕는 AI 기반 개인 목표 관리 도구

### 1.2 핵심 가치
- **명확성**: 추상적인 목표를 구체적으로 변환
- **실행가능성**: 실제로 실행할 수 있는 단계별 계획 제공
- **지속가능성**: 알림과 추적을 통한 꾸준한 실행 지원

### 1.3 타겟 사용자
- 목표는 있지만 어떻게 시작해야 할지 모르는 사람
- 체계적인 계획 수립이 어려운 사람
- 혼자서 목표를 관리하고 싶은 개인 사용자

---

## 2. 핵심 기능 요구사항

### 2.1 목표 입력 및 구체화

#### 2.1.1 초기 목표 입력
- 사용자는 자유 형식으로 목표를 입력할 수 있음
- 최대 500자까지 입력 가능
- 예시: "영어 공부하기", "3개월 안에 풀스택 개발자 되기"

#### 2.1.2 AI 기반 파인만 기법 적용
- AI가 입력된 목표를 분석하여 부족한 정보 파악
- 동적으로 필요한 질문 생성 (미리 정의된 템플릿 없음)
- 질문 카테고리:
  - **명확화 (clarification)**: 목표의 구체적 의미
  - **범위 (scope)**: 목표의 범위와 경계
  - **측정 (measurement)**: 성공 기준과 측정 방법
  - **맥락 (context)**: 현재 상황과 제약사항

#### 2.1.3 대화형 정보 수집
- 사용자는 AI의 질문에 순차적으로 답변
- 각 답변에 따라 후속 질문이 동적으로 생성
- 필수 질문과 선택 질문 구분

#### 2.1.4 목표 최종 확인
- 수집된 정보를 바탕으로 AI가 구체화된 목표 문장 생성
- 사용자에게 승인 요청
- 승인/수정 요청 선택 가능

### 2.2 AI 플랜 생성

#### 2.2.1 세부 플랜 자동 생성
승인된 목표에 대해 AI가 다음 정보를 포함한 플랜 생성:
- **플랜 제목**: 명확하고 실행 가능한 작업명
- **설명**: 구체적인 실행 방법과 예상 결과
- **예상 소요 시간**: 시간 단위로 추정
- **우선순위**: 1-5 단계 (1이 가장 높음)
- **종속성**: 선행되어야 할 다른 플랜들
- **근거**: 왜 이 플랜이 필요한지 설명

#### 2.2.2 플랜 구조
- 계층적 구조 지원 (메인 플랜 → 서브 플랜)
- 각 플랜은 체크포인트 포함 가능
- 전체 목표 달성까지의 예상 기간 계산

### 2.3 플랜 관리

#### 2.3.1 플랜 상태
- **pending**: 대기 중
- **ready**: 시작 가능 (종속성 충족)
- **in_progress**: 진행 중
- **paused**: 일시 중지
- **blocked**: 차단됨 (종속성 미충족)
- **completed**: 완료
- **cancelled**: 취소
- **overdue**: 기한 초과
- **in_review**: 검토 중

#### 2.3.2 플랜 작업
- **시작**: pending/ready → in_progress
- **일시중지**: in_progress → paused
- **재개**: paused → in_progress
- **완료**: in_progress → completed
- **취소**: 모든 상태 → cancelled

#### 2.3.3 종속성 관리
- 종속성이 있는 플랜 선택 시 경고 툴팁 표시
- 사용자는 경고를 무시하고 진행 가능
- 차단된 플랜 목록과 이유 표시

#### 2.3.4 진행률 추적
- 각 플랜의 진행률 (0-100%)
- 체크포인트 완료 여부
- 실제 소요 시간 기록
- 전체 목표 진행률 계산

### 2.4 알림 및 리마인더

#### 2.4.1 알림 유형
- **플랜 시작 알림**: 예정된 플랜 시작 시간
- **일일 체크인**: 매일 정해진 시간에 진행 상황 확인
- **마감일 알림**: 플랜 마감일 임박 경고
- **마일스톤 알림**: 중요 지점 도달 시
- **기한 초과 알림**: 예정 시간 초과 시
- **동기부여 메시지**: 선택적 격려 메시지

#### 2.4.2 알림 설정
- 사용자별 선호 알림 시간 설정
- 요일별 알림 활성화/비활성화
- 알림 유형별 on/off 설정
- 반복 패턴 설정 (일회성, 매일, 매주, 사용자 정의)

### 2.5 사용자 인터페이스 요구사항

#### 2.5.1 주요 화면
1. **목표 입력 화면**
   - 목표 텍스트 입력 필드
   - AI 질문 표시 영역
   - 답변 입력 컨트롤 (텍스트, 선택, 숫자)

2. **플랜 대시보드**
   - 전체 진행률 표시
   - 상태별 플랜 그룹화
   - 다음 실행 가능한 플랜 하이라이트

3. **플랜 상세 화면**
   - 플랜 정보 표시
   - 진행률 및 체크포인트
   - 상태 변경 버튼
   - 종속성 시각화

4. **일정/캘린더 뷰**
   - 월/주/일 단위 플랜 표시
   - 드래그 앤 드롭으로 일정 조정

5. **설정 화면**
   - 알림 설정
   - 작업 시간대 설정
   - 계정 정보

---

## 3. 기술 요구사항

### 3.1 기술 스택
- **프론트엔드**: React Native + TypeScript
- **백엔드**: Nest.js + TypeScript  
- **데이터베이스**: Supabase (PostgreSQL)
- **AI 서비스**: OpenAI API 또는 Claude API
- **푸시 알림**: Firebase Cloud Messaging
- **상태 관리**: Redux Toolkit 또는 Zustand
- **폼 검증**: React Hook Form + Zod

### 3.2 데이터 보안
- 모든 API 통신은 HTTPS 사용
- JWT 기반 인증
- 민감한 정보는 암호화하여 저장

### 3.3 성능 요구사항
- 앱 초기 로딩: 3초 이내
- AI 응답 시간: 5초 이내
- 오프라인 모드: 기본 기능 사용 가능

---

## 4. 비기능 요구사항

### 4.1 사용성
- 직관적인 UI/UX
- 최소한의 학습 곡선
- 접근성 지원 (폰트 크기, 색상 대비)

### 4.2 확장성
- 향후 협업 기능 추가 가능한 구조
- 다국어 지원 가능한 아키텍처
- 플러그인 시스템 고려

### 4.3 신뢰성
- 99.9% 가동률 목표
- 자동 백업 및 복구
- 에러 추적 및 모니터링

---

## 5. 제약사항 및 가정

### 5.1 제약사항
- 개인 사용 전용 (멀티 유저 미지원)
- 인터넷 연결 필요 (AI 기능)
- iOS 13+ / Android 8+ 지원

### 5.2 가정
- 사용자는 스마트폰 기본 조작 가능
- 목표 설정에 대한 기본적인 이해 보유
- 정기적으로 앱을 확인할 의지 있음

---

## 6. 성공 지표

### 6.1 핵심 지표
- **목표 완료율**: 설정된 목표 중 완료된 비율
- **플랜 실행률**: 생성된 플랜 중 실제 시작된 비율
- **일일 활성 사용률**: 매일 앱을 사용하는 비율

### 6.2 보조 지표
- AI 추천 플랜 수락률
- 평균 목표 달성 기간
- 알림 응답률

---

## 7. 향후 로드맵

### Phase 1 (MVP)
- 기본 목표 입력 및 AI 대화
- 플랜 생성 및 관리
- 기본 알림 기능

### Phase 2
- 캘린더 통합
- 상세 분석 및 리포트
- 습관 추적 기능

### Phase 3
- 소셜 기능 (선택적 공유)
- AI 코칭 고도화
- 외부 앱 연동

---

## 8. 부록

### 8.1 용어 정의
- **목표 (Goal)**: 사용자가 달성하고자 하는 최종 상태
- **플랜 (Plan)**: 목표 달성을 위한 구체적인 작업 단위
- **체크포인트 (Checkpoint)**: 플랜 내의 세부 확인 사항
- **종속성 (Dependency)**: 플랜 간의 선후 관계

### 8.2 참고 자료
- 파인만 기법 관련 문서
- SMART 목표 설정 방법론
- 행동 심리학 기반 습관 형성 이론