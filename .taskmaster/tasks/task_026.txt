# Task ID: 26
# Title: 메모리 누수 방지를 위한 연결 정리 로직 구현
# Status: pending
# Dependencies: 23, 24, 25
# Priority: medium
# Description: WebSocket 및 Redis 연결에서 발생할 수 있는 메모리 누수를 방지하기 위해 연결 생명주기 관리와 리소스 정리 로직을 구현합니다.
# Details:
WebSocket Gateway에 연결 추적 Map 구현 (clientId -> connectionInfo), Socket disconnect 이벤트에서 관련 리소스 즉시 정리, Redis Pub/Sub 구독 해제 로직 구현 (unsubscribe 보장), WeakMap을 활용한 가비지 컬렉션 친화적 구조 설계, NestJS OnModuleDestroy 인터페이스로 graceful shutdown 구현, 연결별 타임아웃 설정 (30분 idle 후 자동 해제), 메모리 사용량 모니터링 미들웨어 구현, process.memoryUsage() 기반 임계값 알림, Socket.IO adapter 레벨에서 연결 풀 관리, Redis 연결 풀 최대 크기 제한 설정, 순환 참조 방지를 위한 이벤트 리스너 정리, Bull Queue 작업 완료 후 자동 정리 설정, Prisma 연결 풀 최적화 (connection_limit 설정), 메모리 프로파일링을 위한 heapdump 통합, Winston logger로 연결 생성/해제 추적 로깅

# Test Strategy:
연결 해제 시 메모리 해제 검증 테스트, 대량 연결 시뮬레이션 후 메모리 사용량 측정, Redis 구독 해제 확인 테스트, Graceful shutdown 시 모든 연결 정리 테스트, 장시간 idle 연결 자동 해제 테스트, 메모리 프로파일링으로 누수 지점 확인, 연결 풀 한계 테스트, 순환 참조 감지 테스트
